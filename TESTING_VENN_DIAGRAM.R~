source("http://bioconductor.org/biocLite.R")
biocLite(c("graph", "RBGL", "gtools", "xtable"))
install.packages("Vennerable", repos="http://R-Forge.R-project.org")


vd <- venndia(A=seq(1,2000000), B=seq(1500000, 2800000),C= seq(2,3000000,by=2), getdata=TRUE)

1+2

####################
GET.MATRIX <- function(aBedOrGffFile){
  #this reads the data from a file and return them as a matrix:
  top.five.rows <- read.table(file=aBedOrGffFile, nrows =5)
  classes       <- sapply(top.five.rows, class)
  dataAsTable   <- read.table(file = aBedOrGffFile, colClasses = classes)
  dataAsTable   <- as.matrix(dataAsTable)
  dataAsTable
}#GET.MATRIX#

GET.VECTOR.OF.FEATURES <- function(dataMatrix, fileFormat){
  vector.of.feature  <- c()
  number.of.features <- nrow(dataMatrix)
  for(i in 1:number.of.features){
    if(fileFormat== "bed" || fileFormat=="BED"){
      start <- dataMatrix[2]
      end <- dataMatrix[3]
      one.feature <- seq(start,end)
      vector.of.feature <- c(vector.of.feature,one.feature) 
    }
    else if (fileFormat == "gff" ||fileFormat == "GFF" ){
      start <-  dataMatrix[4]
      end   <-  dataMatrix[5]
      one.feature <- seq(start,end)
      vector.of.feature <- c(vector.of.feature,one.feature) 

    }
    else{
      stop(paste("Undefined file format!",fileFormat, sep = " " ))
    }
  }
  vector.of.feature
}##

circle <- function(x, y, r, ...) {
    ang <- seq(0, 2*pi, length = 100)
    xx <- x + r * cos(ang)
    yy <- y + r * sin(ang)
    polygon(xx, yy, ...)
}#curcle#

venndia <- function(A, B, C, getdata=FALSE, ...){
    cMissing <- missing(C)
    if(cMissing){ C <- c() }

    unionAB <- union(A, B)
    unionAC <- union(A, C)
    unionBC <- union(B, C)
    uniqueA <- setdiff(A, unionBC)
    uniqueB <- setdiff(B, unionAC)
    uniqueC <- setdiff(C, unionAB)
    intersAB <- setdiff(intersect(A, B), C)
    intersAC <- setdiff(intersect(A, C), B)
    intersBC <- setdiff(intersect(B, C), A)
    intersABC <- intersect(intersect(A, B), intersect(B, C))

    nA <- length(uniqueA)       
    nB <- length(uniqueB)
    nC <- length(uniqueC)

    nAB <- length(intersAB)
    nAC <- length(intersAC)
    nBC <- length(intersBC)

    nABC <- length(intersABC)   

    par(mar=c(2, 2, 0, 0))
    plot(-10, -10, ylim=c(0, 9), xlim=c(0, 9), axes=FALSE, ...)
    circle(x=3, y=6, r=3, col=rgb(1,0,0,.5), border=NA)
    circle(x=6, y=6, r=3, col=rgb(0,.5,.1,.5), border=NA)
    circle(x=4.5, y=3, r=3, col=rgb(0,0,1,.5), border=NA)

    text( x=c(1.2, 7.7, 4.5), y=c(7.8, 7.8, 0.8), c("A", "B", "C"), cex=3, col="gray90" )

    text(
        x=c(2, 7, 4.5, 4.5, 3, 6, 4.5), 
        y=c(7, 7, 2  , 7  , 4, 4, 5), 
        c(nA, nB, nC, nAB, nAC, nBC, nABC), 
        cex=2
    )

    if(getdata){
        list(A=uniqueA, B=uniqueB, C=uniqueC, 
                AB=intersAB , AC=intersAC , BC=intersBC , 
                ABC=intersABC
        )
    }
}#venndia#
